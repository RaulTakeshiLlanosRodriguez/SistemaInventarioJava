package vista;

import conexion.Conexion;
import controlador.Ctrl_Equipo;
import controlador.Ctrl_Mueble;

import controlador.Ctrl_Usuario;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Equipo;
import modelo.Mueble;

import modelo.Usuario;

/**
 *
 * @author ediso
 */
public class FrmGestionarEquipos extends javax.swing.JInternalFrame {

    private int idEquipo = 0;

    public FrmGestionarEquipos() {
        initComponents();
        this.setSize(new Dimension(900, 500));
        this.setTitle("Gestionar Equipo");
        //Cargar tabla
        this.CargarTablaUsuarios();

        //insertar imagen en nuestro JLabel
        ImageIcon wallpaper = new ImageIcon("src/img/fondo3.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(900, 500, WIDTH));
        jLabel_wallpaper.setIcon(icono);
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_muebles = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar1 = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_nOrden = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_ubicacion = new javax.swing.JTextField();
        txt_tipo = new javax.swing.JTextField();
        txt_tipo_descripcion = new javax.swing.JTextField();
        txt_num_descripcion = new javax.swing.JTextField();
        txt_cod_patrimonial = new javax.swing.JTextField();
        txt_marca = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        t_buscar = new javax.swing.JTextField();
        jButton_buscar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Equipos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_muebles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_muebles);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 710, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 730, 270));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar1.setBackground(new java.awt.Color(51, 204, 0));
        jButton_actualizar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_actualizar1.setText("Actualizar");
        jButton_actualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizar1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jButton_eliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 130, 270));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Nro Orden:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 90, -1));

        txt_nOrden.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_nOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Ubicacion:");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 90, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tipo:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 90, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Tipo Descripcion:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Num Descripcion:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 140, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Marca:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 90, -1));

        txt_ubicacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_ubicacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 170, -1));

        txt_tipo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 170, -1));

        txt_tipo_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_tipo_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 40, 140, -1));

        txt_num_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_num_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 140, -1));

        txt_cod_patrimonial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_cod_patrimonial, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 170, -1));

        txt_marca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPanel3.add(txt_marca, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Cod Patrimonial:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 130, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 870, 100));
        getContentPane().add(t_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 270, -1));

        jButton_buscar.setBackground(new java.awt.Color(51, 204, 0));
        jButton_buscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton_buscar.setText("Buscar");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, 90, -1));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        buscar(t_buscar.getText());
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed
        
        Ctrl_Equipo controlEquipo = new Ctrl_Equipo();
        if (idEquipo == 0) {
            JOptionPane.showMessageDialog(null, "¡Seleccione un equipo!");
        } else {
            if (!controlEquipo.eliminar(idEquipo)) {
                JOptionPane.showMessageDialog(null, "¡Equipo Eliminado!");
                this.CargarTablaUsuarios();
                this.Limpiar();
                idEquipo = 0;
            } else {
                JOptionPane.showMessageDialog(null, "¡Error al eliminar equipo!");
                this.Limpiar();
            }
        }
        
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    private void jButton_actualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizar1ActionPerformed
         Equipo equipo = new Equipo();
        Ctrl_Equipo controlEquipo = new Ctrl_Equipo();

        if (idEquipo == 0) {
            JOptionPane.showMessageDialog(null, "¡Seleccione un equipo!");
        } else {
            if (txt_nOrden.getText().isEmpty() ||txt_cod_patrimonial.getText().equals("")||txt_ubicacion.getText().equals("")||txt_tipo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "¡Completa los campos!");

            } else {
                equipo.setNroOrden(Integer.parseInt(txt_nOrden.getText()));
                equipo.setCodPatrimonial(txt_cod_patrimonial.getText());
                equipo.setUbicacion(txt_ubicacion.getText());
                equipo.setTipo(txt_tipo.getText());
                equipo.setMarca(txt_marca.getText());
                equipo.setTipoDescripcion(txt_tipo_descripcion.getText());
                equipo.setNumDescripcion(txt_num_descripcion.getText());
                
                if(controlEquipo.actualizar(equipo, idEquipo)){
                    JOptionPane.showMessageDialog(null, "¡Actualizacion Exitosa!");
                    this.Limpiar();
                    this.CargarTablaUsuarios();
                    idEquipo = 0;
                    
                }else{
                    JOptionPane.showMessageDialog(null, "¡Error al Actualizar equipo!");
                }
            }
        }
    }//GEN-LAST:event_jButton_actualizar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar1;
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_muebles;
    private javax.swing.JTextField t_buscar;
    private javax.swing.JTextField txt_cod_patrimonial;
    private javax.swing.JTextField txt_marca;
    private javax.swing.JTextField txt_nOrden;
    private javax.swing.JTextField txt_num_descripcion;
    private javax.swing.JTextField txt_tipo;
    private javax.swing.JTextField txt_tipo_descripcion;
    private javax.swing.JTextField txt_ubicacion;
    // End of variables declaration//GEN-END:variables

    /*
     * *****************************************************
     * metodo para limpiar
     * *****************************************************
     */
    private void Limpiar() {
                txt_nOrden.setText("");
                txt_cod_patrimonial.setText("");
                txt_ubicacion.setText("");
                txt_tipo.setText("");
                txt_marca.setText("");
                txt_tipo_descripcion.setText("");
                txt_num_descripcion.setText("");
    }


    /*
     * *****************************************************
     * metodo para mostrar todos los clientes registrados
     * *****************************************************
     */
    private void CargarTablaUsuarios() {
        
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
         
        String sql = "select idEquipo,codPatrimonial,ubicacion,tipo,marca,tipoDescripcion,numDescripcion from equipos";
        Statement st;
        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            FrmGestionarEquipos.jTable_muebles = new JTable(model);
            FrmGestionarEquipos.jScrollPane1.setViewportView(FrmGestionarEquipos.jTable_muebles);
            

            model.addColumn("N°Orden");//ID
            model.addColumn("Cod Patrimonial");
            model.addColumn("Ubicacion");
            model.addColumn("Tipo");
            model.addColumn("Marca");
            model.addColumn("Tipo Descripcion");
            model.addColumn("Num Decripcion");

            while (rs.next()) {
                Object fila[] = new Object[7];
                for (int i = 0; i < 7; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla equipos: " + e);
        }
        //evento para obtener campo al cual el usuario da click
        //y obtener la interfaz que mostrara la informacion general
        jTable_muebles.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_muebles.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idEquipo = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosUsuarioSeleccionado(idEquipo);//metodo
                }
            }
        });
    }


    /*
     * **************************************************
     * Metodo que envia datos seleccionados
     * **************************************************
     */
    private void EnviarDatosUsuarioSeleccionado(int idEquipo) {
        try {
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select nroOrden,codPatrimonial,ubicacion,tipo,marca,tipoDescripcion,numDescripcion from equipos where idEquipo='" + idEquipo + "'");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                txt_nOrden.setText(rs.getString("nroOrden"));
                txt_cod_patrimonial.setText(rs.getString("codPatrimonial"));
                txt_ubicacion.setText(rs.getString("ubicacion"));
                txt_tipo.setText(rs.getString("tipo"));
                txt_marca.setText(rs.getString("marca"));
                txt_tipo_descripcion.setText(rs.getString("tipoDescripcion"));
                txt_num_descripcion.setText(rs.getString("numDescripcion"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("Error al seleccionar equipo: " + e);
        }
    }
    private DefaultTableModel buscarMueble(String buscar){
        String[] nombreColumna={"Nro Orden","Cod Patrimonial","Ubicacion","Tipo","Marca","Tipo Descripcion","Num Descripcion"};
        String[] nroCampos = new String[8];
        DefaultTableModel modelo = new DefaultTableModel(null,nombreColumna);
        
        String sql = "select idEquipo,codPatrimonial,ubicacion,tipo,marca,tipoDescripcion,numDescripcion from equipos where idEquipo like '%"+buscar+"%' or codPatrimonial like '%"+buscar+"%' or ubicacion like '%"+buscar+"%' or tipo like '%"+buscar+"%' or marca like '%"+buscar+"%' or tipoDescripcion like '%"+buscar+"%' or numDescripcion like '%"+buscar+"%'";
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            
            while(rs.next()){
                nroCampos[0] = rs.getString("idEquipo");
                nroCampos[1] = rs.getString("codPatrimonial");
                nroCampos[2] = rs.getString("ubicacion");
                nroCampos[3] = rs.getString("tipo");
                nroCampos[4] = rs.getString("marca");
                nroCampos[5] = rs.getString("tipoDescripcion");
                nroCampos[6] = rs.getString("numDescripcion");
                modelo.addRow(nroCampos);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
        return modelo;
    }
    
    private void buscar(String valor){
        DefaultTableModel modelo = buscarMueble(valor);
        jTable_muebles.setModel(modelo);
    }

}
